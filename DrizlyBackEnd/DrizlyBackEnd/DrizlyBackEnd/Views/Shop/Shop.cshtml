@model ShopViewModel
@using DrizlyBackEnd.Services
@inject LayoutService layoutService
@{

    ViewData["Title"] = "Drizly: Shop: " + Model.Category.Name;
    var settings = layoutService.GetSettings();
    int counter = (ViewBag.PageIndex - 1) * 6;
    var temp = -1;
    if (ViewBag.PageIndex == 1)
    {
        temp = 0;
    }
    if (temp == ViewBag.TotalPages)
    {
        temp = -2;
    }
}
<!--Main Start-->
<main>
    <!-- Shop Hero Section -->
    <section class="shop-hero">
        <div class="shop-product-content">
            <h1 class="shop-header">Shop @Model.Category.Name</h1>
            <p class="shop-desc">Then get it delivered in under 60 minutes. Boom, simple.</p>
            <span><a asp-controller="home" asp-action="index">Home</a> / @Model.Category.Name</span>
        </div>
        <div class="shop-hero-image">
            <img src="~/uploads/categories/@Model.Category.Image">
        </div>
        <svg class="shop-image-line" viewBox="0 0 100 100" preserveAspectRatio="none">
            <polygon fill="#f7f7f7" points="100,0 75,100 100,100"></polygon>
            <polygon fill="#E12C2C" points="100,0 95,0 75,100 80,100"></polygon>
        </svg>
    </section>
    <!-- Products and Filter Shop Section -->
    <section class="product-filter-section">
        <div class="category-name-sort-wrapper">
            <div class="sorting-name-container">
                <div class="category-name-sorting">
                    <h2>@Model.Category.Name</h2>
                    <p>(<span>@ViewBag.TotalProducts</span> results)</p>
                    <div class="sorting-product-wrapper">
                        <div class="sorting-product">
                            <!-- <label><span>Sort by:</span></label>
                            <button class="sorting-button"><span>Name: A-Z</span></button>
                            <i class="fas fa-chevron-down"></i> -->
                            <select class="sorting-product">
                                <option class="sorting-list-item"><span>Name: A-Z</span></option>
                                <option class="sorting-list-item"><span>Name: Z-A</span></option>
                                <option class="sorting-list-item"><span>Price: High to Low</span></option>
                                <option class="sorting-list-item"><span>Price: Low to High</span></option>
                            </select>
                        </div>

                    </div>
                    <div class="filter-btn-mobile">
                        <button>
                            <span>
                                <i class="fas fa-bars" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Products Paginated Section -->
    <section class="product-shop-paginated-section">
        <div class="products-container">
            <div class="products-paginated">
                <!-- Promotion Here -->
                <div class="promotion-wrapper">
                    @if (Model.Category.Id == 1)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "BeerPromoTopLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "BeerPromoTopImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 2)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "WinePromoTopLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "WinePromoTopImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 3)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "LiquorPromoTopLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "LiquorPromoTopImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 4)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "ExtraPromoTopLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "ExtraPromoTopImage")?.Value" />
                        </a>
                    }
                </div>
                <ul class="products-ul">
                    @if (Model.Products.Count > 0)
                    {
                        @foreach (var product in Model.Products)
                        {
                            var result = 0;
                            decimal end = 0;
                            foreach (var comment in product.ProductComments)
                            {
                                result += @comment.Rate;
                            }
                            if (result != 0)
                            {
                                end = decimal.Divide(result, product.ProductComments.Count);
                            }
                            <li class="product-list-item">
                                <div class="whole-product-wrapper">
                                    <div class="drink-info">
                                        @if (product.DiscountPercent > 0)
                                        {
                                            <div class="drink-on-sale">On Sale</div>
                                        }
                                        <a asp-controller="shop" asp-action="detail" asp-route-id="@product.Id">
                                            <img src="~/uploads/products/@product.Image">
                                        </a>
                                        <div class="drink-name">
                                            <p class="@(product.IsAvailable==false?"text-danger":"")">@product.Name</p>
                                        </div>
                                        <div class="drink-price">
                                            @if (product.DiscountPercent > 0)
                                            {
                                                <p class="old-price-wrapper">$<span class="price-old">@product.SalePrice$</span></p>
                                                <p class="regular-price-wrapper">$<span class="price-regular">@((product.SalePrice * (1 - product.DiscountPercent / 100)).ToString("0.00"))$</span></p>
                                            }
                                            else
                                            {
                                                <p class="regular-price-wrapper">$<span class="price-regular">@product.SalePrice$</span></p>
                                            }
                                        </div>
                                        <div class="drink-rate-paginated">
                                            @{ var tamhisse = Math.Truncate(end);
                                                var yuvarlaq = Math.Ceiling(end);}
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (end >= i)
                                                {
                                                    <i class="fas fa-star"></i>
                                                }
                                                else if (tamhisse < end && (yuvarlaq == tamhisse || yuvarlaq == i))
                                                {
                                                    <i class="bi bi-star-half"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-star-o"></i>
                                                }
                                            }
                                            <span class="review-count">@product.ProductComments.Count</span>
                                        </div>
                                    </div>
                                    @if (product.IsAvailable == true)
                                    {
                                        <div class="add-to-basket">
                                            <a class="basket-icon basket-icon basket-add" asp-controller="shop" asp-action="AddBasket" asp-route-id="@product.Id"><i class="fas fa-shopping-cart"></i></a>
                                        </div>
                                    }

                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <h1 class="font-weight-bolder my-3">No Product Found by Your Search :{</h1>
                    }
                </ul>

                @if (Model.Products.Count > 0)
                {
                    <div class="products-pagination">
                        <ul class="pagination-box">
                            @if (ViewBag.PageIndex > 1)
                            {
                                <li><a class="Previous" href="@Url.Action("shop","shop",new {id= Model.Category.Id, brandId = ViewBag.BrandId, page=1,typeId = ViewBag.TypeId,countryId = ViewBag.CountryId,minPrice=ViewBag.FilterMinPrice, maxPrice=ViewBag.FilterMaxPrice, minAbv=ViewBag.FilterMinAbv,maxAbv=ViewBag.FilterMaxAbv})"><i class="fas fa-chevron-left"></i></a></li>
                            }

                            @for (int i = 1; i <= 3; i++, temp++)
                            {
                                if ((ViewBag.PageIndex + temp) != 0 && (ViewBag.PageIndex + temp) != -1)
                                {
                                    <li class="@(ViewBag.PageIndex+temp==ViewBag.PageIndex?"active":"")"><a class="@(ViewBag.PageIndex==i?"active-pagination":"")" href="@Url.Action("shop","shop",new {id= Model.Category.Id, brandId = ViewBag.BrandId, page=ViewBag.PageIndex+temp,typeId = ViewBag.TypeId,countryId = ViewBag.CountryId,minPrice=ViewBag.FilterMinPrice, maxPrice=ViewBag.FilterMaxPrice, minAbv=ViewBag.FilterMinAbv,maxAbv=ViewBag.FilterMaxAbv})" style="display:@((ViewBag.PageIndex+temp)>ViewBag.TotalPages?"none":"block")">@(ViewBag.PageIndex+temp)</a></li>
                                }
                            }
                            @if (ViewBag.PageIndex < ViewBag.TotalPages)
                            {
                                <li><a class="Next" href="@Url.Action("shop","shop",new {id= Model.Category.Id, brandId = ViewBag.BrandId, page=ViewBag.TotalPages,typeId = ViewBag.TypeId,countryId = ViewBag.CountryId,minPrice=ViewBag.FilterMinPrice, maxPrice=ViewBag.FilterMaxPrice, minAbv=ViewBag.FilterMinAbv,maxAbv=ViewBag.FilterMaxAbv})"><i class="fas fa-chevron-right"></i></a></li>
                            }
                        </ul>
                    </div>
                }

                <div class="promotion-wrapper">
                    @if (Model.Category.Id == 1)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "BeerPromoBottomLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "BeerPromoBottomImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 2)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "WinePromoBottomLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "WinePromoBottomImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 3)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "LiquorPromoBottomLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "LiquorPromoBottomImage")?.Value" />
                        </a>
                    }
                    else if (Model.Category.Id == 4)
                    {
                        <a href="@Model.Settings.Find(c => c.Key == "ExtraPromoBottomLink")?.Value">
                            <img src="~/uploads/settings/@Model.Settings.Find(c => c.Key == "ExtraPromoBottomImage")?.Value" />
                        </a>
                    }
                </div>
            </div>

            <div class="products-about">
                <div class="category-about-content">
                    <h2>All About @Model.Category.Name</h2>
                    <h3>@Model.Category.DescTitle</h3>
                    <p class="show-more-less-category-paginated category-content-paginated">
                        @Model.Category.Desc
                    </p>
                </div>
                <div class="category-about-show-more">
                    <button type="submit" class="category-show-more-btn-pgn">Show More</button>
                </div>
            </div>
        </div>
        <div class="filter-container" style="margin-bottom:130px;">
            <div class="filter-wrapper">
                <div class="filter-side" style="text-align:center;">
                    <a asp-controller="shop" asp-action="shop" asp-route-id="@Model.Category.Id" style=" background-color: #e12c2c; padding: 12px 30px; border-radius: 5px; color: white; font-weight: bold;">All @Model.Category.Name</a>
                </div>
                <div class="filter-side">
                    <button class="filter-list-button">
                        <div class="filter-list">
                            <p>Categories</p>
                            <h5 class="filter-plus-minus">-</h5>
                        </div>
                    </button>
                    <div class="filter-side-dropdown">
                        <ul class="filters-ul">
                            @foreach (var types in Model.TypeProducts)
                            {
                                <a class="filter-link">
                                <li>
                                    <div class="form-check">
                                        <input form="filterForm" class="typeproductfilter" @(ViewBag.TypeId == types.Id ? "checked" : "") name="typeId" value="@types.Id" id="type-@types.Id" type="radio">
                                        <p class="filter-name" for="type-@types.Id" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@types.Name</p>
                                        <p class="filter-count">(<span>@types.Products.Count</span>)</p>
                                    </div>
                                </li>
                                </a>
                            }
                        </ul>
                        <button class="show-more">More</button>
                    </div>
                </div>
                <div class="filter-side">
                    <button class="filter-list-button">
                        <div class="filter-list">
                            <p>Country of Origin</p>
                            <h5 class="filter-plus-minus">-</h5>
                        </div>
                    </button>
                    <div class="filter-side-dropdown">
                        <ul class="filters-ul">
                            @foreach (var country in Model.Countries)
                            {
                                var listCountries = country.Products.Where(x => x.CategoryId == Model.Category.Id).ToList();
                                if (listCountries.Count > 0)
                                {
                                    <a class="filter-link">
                                    <li>
                                        <div class="form-check">
                                            <input form="filterForm" class="countryfilter" @(ViewBag.CountryId == country.Id ? "checked" : "") name="countryId" value="@country.Id" id="country-@country.Id" type="radio">
                                            <p class="filter-name" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@country.Name</p>
                                            <p class="filter-count">(<span>@listCountries.Count()</span>)</p>
                                        </div>
                                    </li>
                                    </a>
                                }
                            }
                        </ul>
                        <button class="show-more">More</button>
                    </div>
                </div>
                <div class="filter-side">
                    <button class="filter-list-button">
                        <div class="filter-list">
                            <p>Brand</p>
                            <h5 class="filter-plus-minus">-</h5>
                        </div>
                    </button>
                    <div class="filter-side-dropdown">
                        <ul class="filters-ul">
                            @foreach (var brand in Model.Brands)
                            {
                                var listBrands = brand.Products.Where(x => x.CategoryId == Model.Category.Id).ToList();
                                if (listBrands.Count > 0)
                                {
                                    <a class="filter-link">
                                    <li>
                                        <div class="form-check">
                                            <input form="filterForm" class="brandfilter" @(ViewBag.BrandId == brand.Id ? "checked" : "") name="brandId" value="@brand.Id" id="brand-@brand.Id" type="radio">
                                            <p class="filter-name" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@brand.Name</p>
                                            <p class="filter-count">(<span>@listBrands.Count()</span>)</p>
                                        </div>
                                    </li>
                                    </a>
                                }
                            }
                        </ul>
                        <button class="show-more">More</button>
                    </div>
                </div>
                @*FILTER BY ABV*@
                @if (Model.Category.Id != 4)
                {
                    <div class="filter-side" style="height: 137px;">
                        <button class="filter-list-button">
                            <input type="hidden" form="filterForm" name="minAbv" id="minAbvInput" />
                            <input type="hidden" form="filterForm" name="maxAbv" id="maxAbvInput" />
                            <div class="filter-list mb-3">
                                <p>Filter by ABV</p>
                            </div>
                        </button>
                        <div class="sidebar-body">
                            <div class="abv-range-wrap">
                                <div class="abv-range" data-min="0" data-max="100"></div>
                                <div class="range-slider-abv">
                                    <form action="#">
                                        <div class="abv-input">
                                            <label for="amountabvmobile">ABV: </label>
                                            <input form="filterForm" type="text" id="amountabvmobile">
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @*FILTER BY PRICE*@
                <div class="filter-side">
                    <button class="filter-list-button">
                        <input type="hidden" form="filterForm" name="minPrice" id="minPriceInput" />
                        <input type="hidden" form="filterForm" name="maxPrice" id="maxPriceInput" />
                        <div class="filter-list mb-3">
                            <p>Filter by Price</p>
                        </div>
                    </button>
                    <div class="sidebar-body">
                        <div class="price-range-wrap">
                            <div class="price-range price-range-desktop" data-min="20" data-max="400"></div>
                            <div class="range-slider">
                                <form id="filterForm" method="get" asp-controller="shop" asp-action="shop" asp-route-id="@Model.Category.Id">
                                    <div class="price-input">
                                        <label for="amount">Price: </label>
                                        <input type="text" id="amount">
                                    </div>
                                    <button type="submit" class="filter-btn mb-2">filter</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                @*END FILTER BY PRICE*@
            </div>
        </div>
    </section>
</main>
<!--Main End-->
<!-- FILTER SIDEBAR -->
<div class="filter-body">
    <div class="filter-overlay"></div>
    <div class="filter-sidebar">
        <div class="filter-wrapper">
            <h3>
                <button class="exit-filter-sidebar"><i class="fas fa-times"></i></button>
                Filter
            </h3>
            <div class="filter-side">
                <button class="filter-list-button">
                    <div class="filter-list">
                        <p>Categories</p>
                        <h5 class="filter-plus-minus">-</h5>
                    </div>
                </button>
                <div class="filter-side-dropdown">
                    <ul class="filters-ul">
                        @foreach (var types in Model.TypeProducts)
                        {
                            <a class="filter-link">
                            <li>
                                <div class="form-check">
                                    <input form="filterForm1" class="typeproductfilter1" @(ViewBag.TypeId == types.Id ? "checked" : "") name="typeId" value="@types.Id" id="type-@types.Id" type="radio">
                                    <p class="filter-name" for="type-@types.Id" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@types.Name</p>
                                    <p class="filter-count">(<span>@types.Products.Count</span>)</p>
                                </div>
                            </li>
                            </a>
                        }
                    </ul>
                    <button class="show-more">More</button>
                </div>
            </div>
            <div class="filter-side">
                <button class="filter-list-button">
                    <div class="filter-list">
                        <p>Country Of Origin</p>
                        <h5 class="filter-plus-minus">-</h5>
                    </div>
                </button>
                <div class="filter-side-dropdown">
                    <ul class="filters-ul">
                        @foreach (var country in Model.Countries)
                        {
                            var listCountries = country.Products.Where(x => x.CategoryId == Model.Category.Id).ToList();
                            if (listCountries.Count > 0)
                            {
                                <a class="filter-link">
                                <li>
                                    <div class="form-check">
                                        <input form="filterForm1" class="countryfilter1" @(ViewBag.CountryId == country.Id ? "checked" : "") name="countryId" value="@country.Id" id="country-@country.Id" type="radio">
                                        <p class="filter-name" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@country.Name</p>
                                        <p class="filter-count">(<span>@listCountries.Count()</span>)</p>
                                    </div>
                                </li>
                                </a>
                            }
                        }
                    </ul>
                    <button class="show-more">More</button>
                </div>
            </div>
            <div class="filter-side">
                <button class="filter-list-button">
                    <div class="filter-list">
                        <p>Brand</p>
                        <h5 class="filter-plus-minus">-</h5>
                    </div>
                </button>
                <div class="filter-side-dropdown">
                    <ul class="filters-ul">
                        @foreach (var brand in Model.Brands)
                        {
                            var listBrands = brand.Products.Where(x => x.CategoryId == Model.Category.Id).ToList();
                            if (listBrands.Count > 0)
                            {
                                <a class="filter-link">
                                <li>
                                    <div class="form-check">
                                        <input form="filterForm1" class="brandfilter1" @(ViewBag.BrandId == brand.Id ? "checked" : "") name="brandId" value="@brand.Id" id="brand-@brand.Id" type="radio">
                                        <p class="filter-name" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@brand.Name</p>
                                        <p class="filter-count">(<span>@listBrands.Count()</span>)</p>
                                    </div>
                                </li>
                                </a>
                            }
                        }
                    </ul>
                    <button class="show-more">More</button>
                </div>
            </div>
            @if (Model.Category.Id != 4)
            {
                <div class="filter-side" style="height: 137px;">
                    <button class="filter-list-button">
                        <input type="hidden" form="filterForm1" name="minAbv" id="minAbvInputmobile" />
                        <input type="hidden" form="filterForm1" name="maxAbv" id="maxAbvInputmobile" />
                        <div class="filter-list mb-3">
                            <p>Filter by ABV</p>
                        </div>
                    </button>
                    <div class="sidebar-body">
                        <div class="abv-range-wrap">
                            <div class="abv-range abv-range-mobile" data-min="0" data-max="100"></div>
                            <div class="range-slider-abv">
                                <form action="#">
                                    <div class="abv-input">
                                        <label for="amountabvmobile">ABV: </label>
                                        <input form="filterForm1" type="text" id="amountabvmob">
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="filter-side">
                <button class="filter-list-button">
                    <input type="hidden" form="filterForm1" name="minPrice" id="minPriceInputMob" />
                    <input type="hidden" form="filterForm1" name="maxPrice" id="maxPriceInputMob" />
                    <div class="filter-list mb-3">
                        <p>Filter by Price</p>
                    </div>
                </button>
                <div class="sidebar-body">
                    <div class="price-range-wrap">
                        <div class="price-range price-range-mobile" data-min="20" data-max="400"></div>
                        <div class="range-slider">
                            <form id="filterForm1" method="get" asp-controller="shop" asp-action="shop" asp-route-id="@Model.Category.Id">
                                <div class="price-input">
                                    <label for="amountmob">Price: </label>
                                    <input type="text" id="amountmob">
                                </div>
                                <button type="submit" class="filter-btn mb-2">filter</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/assets/Js/pricerange.js"></script>

    <script>
    $(document).ready(function () {

        //PRICE RANGE SLIDER MOBILE
        var rangeSliderMob = $(".price-range-mobile"),
            amountmob = $("#amountmob"),
            minPricemob = @Model.MinPrice,
            maxPricemob = @Model.MaxPrice;
        rangeSliderMob.slider({
            range: true,
            min: minPricemob,
            max: maxPricemob,
            values: [@ViewBag.FilterMinPrice, @ViewBag.FilterMaxPrice],
            slide: function (event, ui) {
                amountmob.val("$" + ui.values[0] + " - $" + ui.values[1]);
                console.log(ui.values[0] + "-" + ui.values[1])
            },
            change: function (event, ui) {
                $("#minPriceInputMob").val(ui.values[0]);
                $("#maxPriceInputMob").val(ui.values[1]);
            }
        });
        amountmob.val(" $" + rangeSliderMob.slider("values", 0) +
            " - $" + rangeSliderMob.slider("values", 1));

        //PRICE RANGE SLIDER
        var rangeSlider = $(".price-range-desktop"),
            amount = $("#amount"),
            minPrice = @Model.MinPrice,
            maxPrice = @Model.MaxPrice;
        rangeSlider.slider({
            range: true,
            min: minPrice,
            max: maxPrice,
            values: [@ViewBag.FilterMinPrice, @ViewBag.FilterMaxPrice],
            slide: function (event, ui) {
                amount.val("$" + ui.values[0] + " - $" + ui.values[1]);
             
            },
            change: function (event, ui) {
                $("#minPriceInput").val(ui.values[0]);
                $("#maxPriceInput").val(ui.values[1]);
            }
        });
        amount.val(" $" + rangeSlider.slider("values", 0) +
            " - $" + rangeSlider.slider("values", 1));
    })
    </script>
}