@model ProductDetailViewModel

@{
    ViewData["Title"] = "Drizly: Detail " + Model.Product.Name;
    var result = 0;
    decimal end = 0;
    foreach (var comment in Model.Product.ProductComments)
    {
        result += @comment.Rate;
    }
    if (result != 0)
    {
        end = decimal.Divide(result, @Model.Product.ProductComments.Count);
    }

    int counter = (Model.Comments.PageIndex - 1) * Model.Comments.PageSize;
    var temp = -1;
    if (Model.Comments.PageIndex == 1)
    {
        temp = 0;
    }
    if (temp == Model.Comments.TotalPages)
    {
        temp = -2;
    }
}

<main class="detail-main">
    <div class="detail-wrapper">
        <div class="left-side-detail">
            <nav>
                <ul>
                    <li><a asp-controller="home" asp-action="index"><span>Home</span></a></li>
                    <li><a asp-controller="shop" asp-action="index" asp-route-id="@Model.Product.CategoryId"><span>@Model.Product.TypeProduct.Category.Name</span></a></li>
                    <li><a asp-controller="shop" asp-action="shop" asp-route-id="@Model.Product.CategoryId" asp-route-typeId="@Model.Product.TypeProductId"><span>@Model.Product.TypeProduct.Name</span></a></li>
                    <li>@Model.Product.Name</li>
                </ul>
            </nav>
            <div class="product-detail">
                <div class="product-image-name">
                    <div class="image-container">
                        <span class="delivery-span">
                            <svg viewBox="0 0 83 62" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-21.000000, -162.000000)" fill="#E12C2C"><g transform="translate(19.000000, 162.000000)"><g><path d="M4.461,46.734 L4.461,37.466 C4.461,37.326 4.573,37.2 4.713,37.2 L8.129,37.2 C10.831,37.2 13.043,39.398 13.043,42.086 C13.043,44.802 10.831,47 8.129,47 L4.713,47 C4.573,47 4.461,46.874 4.461,46.734 Z M6.645,44.928 L7.989,44.928 C9.571,44.928 10.719,43.682 10.719,42.086 C10.719,40.504 9.571,39.258 7.989,39.258 L6.645,39.258 L6.645,44.928 Z M13.883,44.2 C13.883,42.618 15.129,41.26 16.781,41.26 C18.209,41.26 19.441,42.352 19.441,43.892 C19.441,43.99 19.427,44.172 19.413,44.27 C19.399,44.41 19.273,44.508 19.147,44.508 L15.787,44.508 C15.829,44.886 16.137,45.432 16.865,45.432 C17.215,45.432 17.621,45.264 17.845,45.096 C17.971,44.998 18.111,44.998 18.195,45.096 L18.895,45.936 C18.979,46.048 19.007,46.216 18.881,46.342 C18.391,46.832 17.691,47.14 16.809,47.14 C15.143,47.14 13.883,45.81 13.883,44.2 Z M15.969,43.416 L17.467,43.416 C17.439,43.052 17.089,42.758 16.725,42.758 C16.347,42.758 16.025,43.052 15.969,43.416 Z M20.449,46.734 L20.449,37.466 C20.449,37.326 20.575,37.2 20.715,37.2 L22.255,37.2 C22.395,37.2 22.521,37.326 22.521,37.466 L22.521,46.734 C22.521,46.874 22.395,47 22.255,47 L20.715,47 C20.575,47 20.449,46.874 20.449,46.734 Z M25.055,39.706 C24.439,39.706 23.949,39.216 23.949,38.6 C23.949,37.984 24.439,37.48 25.055,37.48 C25.671,37.48 26.175,37.984 26.175,38.6 C26.175,39.216 25.671,39.706 25.055,39.706 Z M24.033,46.734 L24.033,41.666 C24.033,41.512 24.159,41.4 24.299,41.4 L25.839,41.4 C25.979,41.4 26.105,41.512 26.105,41.666 L26.105,46.734 C26.105,46.874 25.979,47 25.839,47 L24.299,47 C24.159,47 24.033,46.874 24.033,46.734 Z M29.549,47 L26.917,41.778 C26.819,41.596 26.945,41.4 27.155,41.4 L28.723,41.4 C28.821,41.4 28.933,41.47 28.975,41.554 L29.801,43.458 L29.843,43.458 L30.725,41.554 C30.809,41.386 30.907,41.4 31.103,41.4 L32.517,41.4 C32.727,41.4 32.853,41.596 32.755,41.778 L30.095,47 C30.053,47.07 29.941,47.14 29.857,47.14 L29.787,47.14 C29.703,47.14 29.591,47.07 29.549,47 Z M33.161,44.2 C33.161,42.618 34.407,41.26 36.059,41.26 C37.487,41.26 38.719,42.352 38.719,43.892 C38.719,43.99 38.705,44.172 38.691,44.27 C38.677,44.41 38.551,44.508 38.425,44.508 L35.065,44.508 C35.107,44.886 35.415,45.432 36.143,45.432 C36.493,45.432 36.899,45.264 37.123,45.096 C37.249,44.998 37.389,44.998 37.473,45.096 L38.173,45.936 C38.257,46.048 38.285,46.216 38.159,46.342 C37.669,46.832 36.969,47.14 36.087,47.14 C34.421,47.14 33.161,45.81 33.161,44.2 Z M35.247,43.416 L36.745,43.416 C36.717,43.052 36.367,42.758 36.003,42.758 C35.625,42.758 35.303,43.052 35.247,43.416 Z M39.727,46.734 L39.727,41.666 C39.727,41.512 39.853,41.4 39.993,41.4 L40.651,41.4 C40.805,41.4 40.861,41.484 40.903,41.568 L41.155,42.184 C41.435,41.778 41.953,41.26 42.681,41.26 C43.451,41.26 43.997,41.54 43.801,41.862 L43.115,42.982 C43.059,43.08 42.961,43.164 42.807,43.108 C42.737,43.08 42.597,43.038 42.471,43.038 C42.051,43.038 41.729,43.36 41.729,43.836 L41.729,46.734 C41.729,46.902 41.645,47 41.421,47 L39.993,47 C39.853,47 39.727,46.874 39.727,46.734 Z M45.985,46.426 L43.885,41.764 C43.801,41.582 43.913,41.4 44.123,41.4 L45.719,41.4 C45.831,41.4 45.915,41.47 45.957,41.554 L47.035,44.158 L47.063,44.158 L48.169,41.554 C48.197,41.47 48.295,41.4 48.407,41.4 L49.989,41.4 C50.199,41.4 50.325,41.582 50.227,41.764 L45.943,51.032 C45.901,51.116 45.817,51.2 45.705,51.2 L44.137,51.2 C43.927,51.2 43.801,51.018 43.899,50.822 L45.985,46.426 Z M55.183,39.706 C54.567,39.706 54.077,39.216 54.077,38.6 C54.077,37.984 54.567,37.48 55.183,37.48 C55.799,37.48 56.303,37.984 56.303,38.6 C56.303,39.216 55.799,39.706 55.183,39.706 Z M54.161,46.734 L54.161,41.666 C54.161,41.512 54.287,41.4 54.427,41.4 L55.967,41.4 C56.107,41.4 56.233,41.512 56.233,41.666 L56.233,46.734 C56.233,46.874 56.107,47 55.967,47 L54.427,47 C54.287,47 54.161,46.874 54.161,46.734 Z M57.745,46.734 L57.745,41.666 C57.745,41.512 57.871,41.4 58.011,41.4 L58.669,41.4 C58.753,41.4 58.879,41.47 58.921,41.568 L59.145,42.128 C59.453,41.792 60.097,41.26 61.119,41.26 C62.855,41.26 63.779,42.59 63.779,44.186 L63.779,46.734 C63.779,46.874 63.653,47 63.513,47 L62.015,47 C61.861,47 61.749,46.874 61.749,46.734 L61.749,44.116 C61.749,43.556 61.427,43.066 60.797,43.066 C60.237,43.066 59.733,43.472 59.733,44.046 L59.733,46.734 C59.733,46.86 59.677,47 59.481,47 L58.011,47 C57.871,47 57.745,46.874 57.745,46.734 Z M67.993,43.332 C67.993,39.216 71.493,37.55 72.697,37.172 C72.907,37.102 73.061,37.2 73.131,37.396 L73.537,38.474 C73.593,38.642 73.551,38.796 73.271,38.88 C72.613,39.09 70.751,39.734 70.457,41.176 C70.821,41.022 71.409,40.896 71.787,40.896 C73.103,40.896 74.573,41.862 74.573,43.934 C74.573,45.698 73.117,47.14 71.367,47.14 C69.197,47.14 67.993,45.516 67.993,43.332 Z M69.995,43.864 C69.995,44.592 70.597,45.208 71.339,45.208 C72.081,45.208 72.683,44.592 72.683,43.864 C72.683,43.122 72.081,42.506 71.339,42.506 C70.597,42.506 69.995,43.122 69.995,43.864 Z M79.375,47.14 C77.093,47.14 75.791,45.306 75.791,42.24 C75.791,39.174 77.093,37.34 79.375,37.34 C81.657,37.34 82.959,39.174 82.959,42.24 C82.959,45.306 81.657,47.14 79.375,47.14 Z M79.375,45.11 C80.229,45.11 80.705,44.088 80.705,42.24 C80.705,40.406 80.229,39.37 79.375,39.37 C78.521,39.37 78.045,40.406 78.045,42.24 C78.045,44.088 78.521,45.11 79.375,45.11 Z M2.816,60.734 L2.816,55.666 C2.816,55.512 2.928,55.4 3.082,55.4 L3.726,55.4 C3.824,55.4 3.922,55.47 3.964,55.554 L4.202,56.128 C4.552,55.764 5.196,55.26 6.092,55.26 C6.876,55.26 7.422,55.554 7.926,56.114 C8.248,55.792 8.906,55.26 9.858,55.26 C11.594,55.26 12.448,56.604 12.448,58.2 L12.448,60.734 C12.448,60.874 12.336,61 12.182,61 L10.698,61 C10.544,61 10.432,60.874 10.432,60.734 L10.432,58.116 C10.432,57.556 10.138,57.066 9.494,57.066 C9.004,57.066 8.556,57.472 8.556,58.018 L8.556,60.734 C8.556,60.874 8.444,61 8.29,61 L6.946,61 C6.792,61 6.68,60.874 6.68,60.734 L6.68,58.116 C6.68,57.556 6.428,57.066 5.798,57.066 C5.238,57.066 4.818,57.472 4.818,58.046 L4.818,60.734 C4.818,60.874 4.692,61 4.552,61 L3.082,61 C2.928,61 2.816,60.874 2.816,60.734 Z M14.842,53.706 C14.226,53.706 13.736,53.216 13.736,52.6 C13.736,51.984 14.226,51.48 14.842,51.48 C15.458,51.48 15.962,51.984 15.962,52.6 C15.962,53.216 15.458,53.706 14.842,53.706 Z M13.82,60.734 L13.82,55.666 C13.82,55.512 13.946,55.4 14.086,55.4 L15.626,55.4 C15.766,55.4 15.892,55.512 15.892,55.666 L15.892,60.734 C15.892,60.874 15.766,61 15.626,61 L14.086,61 C13.946,61 13.82,60.874 13.82,60.734 Z M17.404,60.734 L17.404,55.666 C17.404,55.512 17.53,55.4 17.67,55.4 L18.328,55.4 C18.412,55.4 18.538,55.47 18.58,55.568 L18.804,56.128 C19.112,55.792 19.756,55.26 20.778,55.26 C22.514,55.26 23.438,56.59 23.438,58.186 L23.438,60.734 C23.438,60.874 23.312,61 23.172,61 L21.674,61 C21.52,61 21.408,60.874 21.408,60.734 L21.408,58.116 C21.408,57.556 21.086,57.066 20.456,57.066 C19.896,57.066 19.392,57.472 19.392,58.046 L19.392,60.734 C19.392,60.86 19.336,61 19.14,61 L17.67,61 C17.53,61 17.404,60.874 17.404,60.734 Z M24.67,58.2 L24.67,55.666 C24.67,55.512 24.796,55.4 24.936,55.4 L26.434,55.4 C26.574,55.4 26.7,55.512 26.7,55.666 L26.7,58.256 C26.7,58.83 27.022,59.334 27.596,59.334 C28.142,59.334 28.436,58.816 28.436,58.34 L28.436,55.666 C28.436,55.442 28.59,55.4 28.73,55.4 L30.158,55.4 C30.298,55.4 30.424,55.512 30.424,55.666 L30.424,60.734 C30.424,60.874 30.298,61 30.158,61 L29.5,61 C29.374,61 29.276,60.902 29.234,60.804 L29.024,60.286 C28.66,60.636 28.212,61.14 27.134,61.14 C25.468,61.14 24.67,59.796 24.67,58.2 Z M32.16,59.194 L32.16,57.178 L31.796,57.178 C31.656,57.178 31.544,57.052 31.544,56.912 L31.544,55.666 C31.544,55.512 31.656,55.4 31.796,55.4 L32.16,55.4 L32.16,53.846 C32.16,53.706 32.286,53.58 32.426,53.58 L33.924,53.58 C34.064,53.58 34.176,53.706 34.176,53.846 L34.176,55.4 L35.212,55.4 C35.366,55.4 35.478,55.512 35.478,55.666 L35.478,56.912 C35.478,57.052 35.366,57.178 35.212,57.178 L34.176,57.178 L34.176,58.928 C34.176,59.236 34.386,59.264 34.554,59.264 C34.75,59.264 34.96,59.194 35.1,59.166 C35.24,59.138 35.366,59.194 35.408,59.348 L35.716,60.51 C35.744,60.636 35.674,60.79 35.534,60.832 C35.534,60.832 34.54,61.14 33.84,61.14 C32.776,61.14 32.16,60.468 32.16,59.194 Z M36.332,58.2 C36.332,56.618 37.578,55.26 39.23,55.26 C40.658,55.26 41.89,56.352 41.89,57.892 C41.89,57.99 41.876,58.172 41.862,58.27 C41.848,58.41 41.722,58.508 41.596,58.508 L38.236,58.508 C38.278,58.886 38.586,59.432 39.314,59.432 C39.664,59.432 40.07,59.264 40.294,59.096 C40.42,58.998 40.56,58.998 40.644,59.096 L41.344,59.936 C41.428,60.048 41.456,60.216 41.33,60.342 C40.84,60.832 40.14,61.14 39.258,61.14 C37.592,61.14 36.332,59.81 36.332,58.2 Z M38.418,57.416 L39.916,57.416 C39.888,57.052 39.538,56.758 39.174,56.758 C38.796,56.758 38.474,57.052 38.418,57.416 Z M42.702,60.678 C42.604,60.594 42.534,60.51 42.604,60.384 L43.094,59.418 C43.136,59.334 43.276,59.25 43.388,59.306 C43.388,59.306 44.046,59.67 44.648,59.67 C44.788,59.67 44.914,59.586 44.914,59.418 C44.914,59.278 44.83,59.082 44.116,58.83 C43.024,58.452 42.548,57.822 42.548,56.954 C42.548,56.016 43.22,55.26 44.732,55.26 C45.614,55.26 46.286,55.498 46.594,55.694 C46.72,55.778 46.818,55.904 46.734,56.044 L46.216,56.996 C46.174,57.08 46.034,57.122 45.922,57.08 C45.922,57.08 45.278,56.758 44.732,56.758 C44.55,56.758 44.424,56.8 44.424,56.954 C44.424,57.094 44.578,57.234 45.054,57.402 C46.188,57.794 46.972,58.242 46.972,59.362 C46.972,60.342 46.188,61.14 44.606,61.14 C43.682,61.14 42.982,60.902 42.702,60.678 Z M50.752,58.186 C50.752,56.604 52.068,55.26 53.664,55.26 C55.26,55.26 56.576,56.604 56.576,58.186 C56.576,59.796 55.26,61.14 53.664,61.14 C52.068,61.14 50.752,59.796 50.752,58.186 Z M52.558,58.186 C52.558,58.816 53.048,59.334 53.664,59.334 C54.28,59.334 54.77,58.816 54.77,58.186 C54.77,57.57 54.28,57.066 53.664,57.066 C53.048,57.066 52.558,57.57 52.558,58.186 Z M57.654,60.734 L57.654,55.666 C57.654,55.512 57.78,55.4 57.92,55.4 L58.578,55.4 C58.732,55.4 58.788,55.484 58.83,55.568 L59.082,56.184 C59.362,55.778 59.88,55.26 60.608,55.26 C61.378,55.26 61.924,55.54 61.728,55.862 L61.042,56.982 C60.986,57.08 60.888,57.164 60.734,57.108 C60.664,57.08 60.524,57.038 60.398,57.038 C59.978,57.038 59.656,57.36 59.656,57.836 L59.656,60.734 C59.656,60.902 59.572,61 59.348,61 L57.92,61 C57.78,61 57.654,60.874 57.654,60.734 Z M65.578,60.734 L65.578,51.466 C65.578,51.326 65.704,51.2 65.844,51.2 L67.384,51.2 C67.524,51.2 67.65,51.326 67.65,51.466 L67.65,60.734 C67.65,60.874 67.524,61 67.384,61 L65.844,61 C65.704,61 65.578,60.874 65.578,60.734 Z M68.742,58.2 C68.742,56.618 69.988,55.26 71.64,55.26 C73.068,55.26 74.3,56.352 74.3,57.892 C74.3,57.99 74.286,58.172 74.272,58.27 C74.258,58.41 74.132,58.508 74.006,58.508 L70.646,58.508 C70.688,58.886 70.996,59.432 71.724,59.432 C72.074,59.432 72.48,59.264 72.704,59.096 C72.83,58.998 72.97,58.998 73.054,59.096 L73.754,59.936 C73.838,60.048 73.866,60.216 73.74,60.342 C73.25,60.832 72.55,61.14 71.668,61.14 C70.002,61.14 68.742,59.81 68.742,58.2 Z M70.828,57.416 L72.326,57.416 C72.298,57.052 71.948,56.758 71.584,56.758 C71.206,56.758 70.884,57.052 70.828,57.416 Z M75.112,60.678 C75.014,60.594 74.944,60.51 75.014,60.384 L75.504,59.418 C75.546,59.334 75.686,59.25 75.798,59.306 C75.798,59.306 76.456,59.67 77.058,59.67 C77.198,59.67 77.324,59.586 77.324,59.418 C77.324,59.278 77.24,59.082 76.526,58.83 C75.434,58.452 74.958,57.822 74.958,56.954 C74.958,56.016 75.63,55.26 77.142,55.26 C78.024,55.26 78.696,55.498 79.004,55.694 C79.13,55.778 79.228,55.904 79.144,56.044 L78.626,56.996 C78.584,57.08 78.444,57.122 78.332,57.08 C78.332,57.08 77.688,56.758 77.142,56.758 C76.96,56.758 76.834,56.8 76.834,56.954 C76.834,57.094 76.988,57.234 77.464,57.402 C78.598,57.794 79.382,58.242 79.382,59.362 C79.382,60.342 78.598,61.14 77.016,61.14 C76.092,61.14 75.392,60.902 75.112,60.678 Z M80.306,60.678 C80.208,60.594 80.138,60.51 80.208,60.384 L80.698,59.418 C80.74,59.334 80.88,59.25 80.992,59.306 C80.992,59.306 81.65,59.67 82.252,59.67 C82.392,59.67 82.518,59.586 82.518,59.418 C82.518,59.278 82.434,59.082 81.72,58.83 C80.628,58.452 80.152,57.822 80.152,56.954 C80.152,56.016 80.824,55.26 82.336,55.26 C83.218,55.26 83.89,55.498 84.198,55.694 C84.324,55.778 84.422,55.904 84.338,56.044 L83.82,56.996 C83.778,57.08 83.638,57.122 83.526,57.08 C83.526,57.08 82.882,56.758 82.336,56.758 C82.154,56.758 82.028,56.8 82.028,56.954 C82.028,57.094 82.182,57.234 82.658,57.402 C83.792,57.794 84.576,58.242 84.576,59.362 C84.576,60.342 83.792,61.14 82.21,61.14 C81.286,61.14 80.586,60.902 80.306,60.678 Z"></path><g transform="translate(13.000000, -0.000000)" fill-rule="nonzero"><path d="M55.8084932,13.9576438 L51.012411,13.9788767 L51.012411,8.08632877 C51.012411,2.72205479 47.9073151,1.08882192 43.0517808,0.765232877 C42.3578904,0.718520548 38.5036986,0.698986301 37.741863,0.698986301 L37.3248493,0.698986301 L36.9800274,0.698986301 C36.8645205,0.687945205 36.749863,0.68709589 36.6360548,0.698986301 C36.6360548,0.698986301 36.0568219,0.758438356 35.7680548,1.05145205 C35.4792877,1.34446575 35.402,1.39967123 35.2847945,1.63917808 L24.9087123,22.9043288 C24.4976438,23.7468493 24.8475616,24.7643288 25.6900822,25.1762466 C25.7529315,25.2068219 25.8183288,25.2221096 25.8828767,25.2441918 C26.0646301,25.3070411 26.2489315,25.3478082 26.4332329,25.3478082 C26.598,25.3478082 26.7610685,25.3206301 26.9173425,25.2739178 C27.2103562,25.2909041 27.4354247,25.3010959 27.4812877,25.3010959 L44.3206575,25.3010959 C44.4760822,25.3010959 44.610274,25.1906849 44.6391507,25.0378082 C45.1963014,22.1569315 47.7306575,20.0650685 50.6650411,20.0650685 C53.5994247,20.0650685 56.1337808,22.1560822 56.6909315,25.0378082 C56.7206575,25.1906849 56.854,25.3010959 57.0094247,25.3010959 L61.5158904,25.3010959 C61.6950959,25.3010959 61.8403288,25.155863 61.8403288,24.9766575 L61.8403288,19.7474247 C61.8420274,17.3200822 59.7459178,13.9576438 55.8084932,13.9576438 Z M47.3578082,14.0816438 L32.9933425,14.0816438 L37.7197808,4.39520548 L42.2398356,4.39520548 C46.591726,4.39520548 47.3578082,5.79657534 47.3578082,8.74115068 L47.3578082,14.0816438 Z M54.7867671,26.209863 C54.7867671,28.4826301 52.9378082,30.331589 50.6650411,30.331589 C48.392274,30.331589 46.5433151,28.4826301 46.5433151,26.209863 C46.5433151,23.9370959 48.392274,22.088137 50.6650411,22.088137 C52.9378082,22.0889863 54.7867671,23.9379452 54.7867671,26.209863 Z M10.7115616,3.06772603 C10.7115616,2.36449315 11.2814521,1.79375342 11.9855342,1.79375342 L28.2312329,1.79375342 C28.9353151,1.79375342 29.5052055,2.36449315 29.5052055,3.06772603 C29.5052055,3.7709589 28.9353151,4.34169863 28.2312329,4.34169863 L11.9855342,4.34169863 C11.2814521,4.34169863 10.7115616,3.7709589 10.7115616,3.06772603 Z M20.1907671,12.4220822 L1.60180822,12.4220822 C0.897726027,12.4220822 0.327835616,11.8513425 0.327835616,11.1481096 C0.327835616,10.4448767 0.897726027,9.87413699 1.60180822,9.87413699 L20.1916164,9.87413699 C20.8956986,9.87413699 21.465589,10.4448767 21.465589,11.1481096 C21.465589,11.8513425 20.8948493,12.4220822 20.1907671,12.4220822 Z M22.2461096,18.8564932 C22.2461096,19.559726 21.6762192,20.1304658 20.972137,20.1304658 L10.7812055,20.1304658 C10.0771233,20.1304658 9.50723288,19.559726 9.50723288,18.8564932 C9.50723288,18.1532603 10.0771233,17.5825205 10.7812055,17.5825205 L20.972137,17.5825205 C21.6762192,17.5825205 22.2461096,18.1532603 22.2461096,18.8564932 Z"></path></g></g></g></g></g></svg>
                        </span>
                        <img src="~/uploads/products/@Model.Product.Image" alt="product-detail">
                        <span class="packaging-span">*Packaging may vary</span>
                    </div>
                    <div class="name-container">
                        <h1 class="product-name">@Model.Product.Name <sup style="font-size:13px" class="@(Model.Product.IsAvailable==true?"text-success":"text-danger")">@(Model.Product.IsAvailable==true? "In Stock":"Out of Stock")</sup></h1>

                        <ul style="display:flex">
                            @if (Model.Product.DiscountPercent > 0)
                            {
                                <li class="mr-2">
                                    <div class="product-label mb-2">
                                        <p>On Sale</p>
                                    </div>
                                </li>
                            }
                            @if (Model.Product.IsFeatured == true)
                            {
                                <li>
                                    <div class="product-label mb-2">
                                        <p>Featured</p>
                                    </div>
                                </li>
                            }
                        </ul>
                        <span class="product-rate">
                            <span class="rate-stars">
                                @{ var tamhisse = Math.Truncate(end);
                                    var yuvarlaq = Math.Ceiling(end);}
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (end >= i)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    else if (tamhisse < end && (yuvarlaq == tamhisse || yuvarlaq == i))
                                    {
                                        <i class="bi bi-star-half"></i>
                                    }
                                    else
                                    {
                                        <i class="fa fa-star-o"></i>
                                    }
                                }
                            </span>
                            <span class="rate-number">
                                @end.ToString("0.0")
                            </span>
                            <span class="rate-count">(@Model.Product.ProductComments.Count Reviews)</span>
                        </span>
                        <ul class="product-rightside-detail">
                            <li class="drink-name">@Model.Product.TypeProduct.Name</li>
                            @if (Model.Product.CategoryId != 4)
                            {
                                <li class="drink-alchohol-percent">@Model.Product.Abv% ABV</li>
                            }
                            <li class="drink-country">@Model.Product.Country.Name</li>
                        </ul>
                        <hr>
                        @if (Model.Product.ProductCountId != null)
                        {
                            <p class="drink-size">Packet: <span>@Model.Product.ProductCount.SizePack items</span></p>
                        }
                        @if (Model.Product.ProductSize != null)
                        {
                            <p class="drink-size">Size: <span>@Model.Product.ProductSize.Size</span></p>
                        }
                        <p class="product-view">View: <span>@Model.Product.ProductViews.Count() <i class="fa fa-eye" aria-hidden="true"></i></span></p>
                        @if (Model.Product.DiscountPercent > 0)
                        {
                            <p class="drink-price-detail">
                                Price: <span class="old-price font-weight-bold">@Model.Product.SalePrice$</span>
                                <span class="regular-price font-weight-bold">@((Model.Product.SalePrice * (1 - Model.Product.DiscountPercent / 100)).ToString("0.00"))$</span>
                            </p>
                            <p class="drink-on-sale font-weight-bold"><span>@Model.Product.DiscountPercent</span>% Sale</p>
                        }
                        else
                        {
                            <p class="drink-price-detail">
                                Price: <span class="regular-price font-weight-bolder">@Model.Product.SalePrice$</span>
                            </p>
                        }
                        <hr>
                        <p class="drink-size">Product Code: <span class="font-weight-bold">@Model.Product.CodePref@Model.Product.CodeNum</span></p>
                        <hr>
                        <a class="add-to-basket-btn @(Model.Product.IsAvailable==true?"basket-add":"")" role="button" asp-controller="shop" asp-action="addbasket" asp-route-id="@Model.Product.Id" style="background-color:@(Model.Product.IsAvailable==false?"#ca7777":"");">@(Model.Product.IsAvailable==true? "Add to Cart":"Out of Stock")</a>
                    </div>
                </div>
                <hr class="detail-hr">
                <!-- Product Detail Table -->
                <div class="product-details-content">
                    <h2 class="details-header">Product Details</h2>
                    <div class="detail-container">
                        <div class="detail-row">
                            <div class="row-name">Category</div>
                            <div class="row-data"><span>@Model.Product.TypeProduct.Category.Name - <span class="font-weight-bolder">@Model.Product.TypeProduct.Name</span> </span></div>
                        </div>
                        <div class="detail-row">
                            <div class="row-name">Origin Country</div>
                            <div class="row-data"><span>@Model.Product.Country.Name</span></div>
                        </div>
                        @if (Model.Product.CategoryId != 4)
                        {
                            <div class="detail-row">
                                <div class="row-name">ABV</div>
                                <div class="row-data"><span>@Model.Product.Abv% </span></div>
                            </div>
                        }
                        @if (Model.Product.CategoryId == 2)
                        {
                            <div class="detail-row">
                                <div class="row-name">Sweet-Dry Scale</div>
                                <div class="row-data"><span>@Model.Product.sweetDryScale.Name </span></div>
                            </div>
                            @if (Model.Product.ProductFoodPairings.Count > 0)
                            {
                                <div class="detail-row">
                                    <div class="row-name">Food Pairing</div>
                                    <div class="row-data">
                                        @foreach (var item in Model.Product.ProductFoodPairings)
                                        {
                                            <span>@item.WineFoodPairing.Name</span>
                                            if (Model.Product.ProductFoodPairings.IndexOf(item) != Model.Product.ProductFoodPairings.Count - 1)
                                            {
                                                <span>,</span>
                                            }
                                        }
                                    </div>
                                </div>
                            }
                        }
                        @if (Model.Product.CategoryId == 3)
                        {
                            <div class="detail-row">
                                <div class="row-name">Liquor Flavor</div>
                                <div class="row-data"><span>@Model.Product.LiquorFlavor.Name </span></div>
                            </div>
                            <div class="detail-row">
                                <div class="row-name">Liquor Color</div>
                                <div class="row-data"><span>@Model.Product.LiquorColor.Color </span></div>
                            </div>
                        }
                        <div class="detail-row">
                            <div class="row-name">Brand</div>
                            <div class="row-data"><span>@Model.Product.Brand.Name </span></div>
                        </div>
                    </div>
                </div>
                <hr class="detail-hr">
                <!-- Product Description -->
                <div class="product-details-content">
                    <h2 class="details-header">Product Description</h2>
                    <p class="product-description">@Model.Product.Desc</p>
                </div>
                <hr class="detail-hr">
                <!-- Review Progress Bar -->
                <div class="product-details-content">
                    <h2 class="details-header">Community Reviews</h2>
                    <span class="product-rate">
                        <span class="rate-stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (end >= i)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                else if (tamhisse < end && (yuvarlaq == tamhisse || yuvarlaq == i))
                                {
                                    <i class="bi bi-star-half"></i>
                                }
                                else
                                {
                                    <i class="fa fa-star-o"></i>
                                }
                            }
                        </span>
                        <span class="rate-number">@end.ToString("0.0")</span>
                        <span class="rate-count">(@Model.Product.ProductComments.Count  Reviews)</span>
                    </span>
                    <span class="progress-review-container">
                        <span class="rate-value">5</span>
                        @{ var counter5 = 0;}
                        @foreach (var comment in @Model.Product.ProductComments)
                        {
                            if (comment.Rate == 5)
                            {
                                counter5++;
                            }
                        }
                        @{
                            decimal progress5 = 0;
                            if (result != 0)
                            {
                                progress5 = decimal.Divide(counter5, @Model.Product.ProductComments.Count) * 100;
                            }

                        }
                        <div class="progress-bar-container star-five-container" data-percentage='@(progress5==0?0:progress5)'>
                            <div class="progress-bar-inner star-five"></div>
                        </div>
                        <span class="rate-count">
                            (<span> @counter5 </span>)
                        </span>
                    </span>
                    <span class="progress-review-container">
                        <span class="rate-value">4</span>
                        @{ var counter4 = 0;}
                        @foreach (var comment in @Model.Product.ProductComments)
                        {
                            if (comment.Rate == 4)
                            {
                                counter4++;
                            }
                        }
                        @{
                            decimal progress4 = 0;
                            if (result != 0)
                            {
                                progress4 = decimal.Divide(counter4, @Model.Product.ProductComments.Count) * 100;
                            }
                        }
                        <div class="progress-bar-container star-four-container" data-percentage='@(progress4==0?0:progress4)'>
                            <div class="progress-bar-inner star-four"></div>
                        </div>
                        <span class="rate-count">
                            (
                            <span> @counter4 </span>)
                        </span>
                    </span>
                    <span class="progress-review-container">
                        <span class="rate-value">3</span>
                        @{ var counter3 = 0;}
                        @foreach (var comment in @Model.Product.ProductComments)
                        {
                            if (comment.Rate == 3)
                            {
                                counter3++;
                            }
                        }
                        @{
                            decimal progress3 = 0;
                            if (result != 0)
                            {
                                progress3 = decimal.Divide(counter3, @Model.Product.ProductComments.Count) * 100;
                            }
                        }
                        <div class="progress-bar-container star-three-container" data-percentage='@(progress3==0?0:progress3)'>
                            <div class="progress-bar-inner star-three"></div>
                        </div>
                        <span class="rate-count">
                            (
                            <span> @counter3 </span>)
                        </span>
                    </span>
                    <span class="progress-review-container">
                        <span class="rate-value">2</span>
                        @{ var counter2 = 0;}
                        @foreach (var comment in @Model.Product.ProductComments)
                        {
                            if (comment.Rate == 2)
                            {
                                counter2++;
                            }
                        }
                        @{
                            decimal progress2 = 0;
                            if (result != 0)
                            {
                                progress2 = decimal.Divide(counter2, @Model.Product.ProductComments.Count) * 100;
                            }
                        }
                        <div class="progress-bar-container star-two-container" data-percentage='@(progress2==0?0:progress2)'>
                            <div class="progress-bar-inner star-two"></div>
                        </div>
                        <span class="rate-count">
                            (
                            <span> @counter2 </span>)
                        </span>
                    </span>
                    <span class="progress-review-container">
                        <span class="rate-value">1</span>
                        @{ var counter1 = 0;}
                        @foreach (var comment in @Model.Product.ProductComments)
                        {
                            if (comment.Rate == 1)
                            {
                                counter1++;
                            }
                        }
                        @{
                            decimal progress1 = 0;
                            if (result != 0)
                            {
                                progress1 = decimal.Divide(counter1, @Model.Product.ProductComments.Count) * 100;
                            }
                        }
                        <div class="progress-bar-container star-one-container" data-percentage='@(progress1==0?0:progress1)'>
                            <div class="progress-bar-inner star-one"></div>
                        </div>
                        <span class="rate-count">
                            (
                            <span> @counter1 </span>)
                        </span>
                    </span>
                </div>
                <!-- Write Review -->
                <div class="product-details-content">
                    <div class="write-review-container">
                        <button class="write-review-btn"><span>Write review</span></button>
                    </div>
                    @Html.Partial("_ProductCommentPartialView", Model.Comment)
                    <ul class="comments-ul">
                        @foreach (var comment in Model.Comments)
                        {
                            <li>
                                <article>
                                    <span class="comment-rate">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(comment.Rate>=i?"fas fa-star":"fa fa-star-o")"></i>
                                        }
                                    </span>
                                    <span class="comment">
                                        <img src="~/uploads/users/@(comment.AppUser.Image==null?"avatar.png":comment.AppUser.Image)" width="31" style="border-radius:50%" alt="User Name Username" />
                                        <span class="customer-name-date">
                                            <span class="customer-name">@comment.AppUser.FullName</span>
                                            <span class="comment-date">@comment.CreatedAt.ToString("MMMM dd, yyyy")</span>
                                        </span>
                                        <p class="comment-content">@comment.Text</p>
                                    </span>
                                </article>
                            </li>
                        }
                        @if (Model.Product.ProductComments.Count == 0)
                        {
                            <h4 class="font-weight-bold text-muted" style=" margin: 20px;">No Comment About this product, be the first one to leave!</h4>
                        }
                    </ul>
                    @if (Model.Product.ProductComments.Count > 0)
                    {
                        <div class="comments-pagination">
                            <ul class="pagination-box">
                                @if (Model.Comments.HasPrev)
                                {
                                    <li><a class="Previous" asp-action="detail" asp-route-page="1" asp-route-isDeleted="@ViewBag.IsDeleted"><i class="fas fa-chevron-left"></i></a></li>
                                }
                                @for (int i = 1; i <= 3; i++, temp++)
                                {
                                    if ((Model.Comments.PageIndex + temp) != 0 && (Model.Comments.PageIndex + temp) != -1)
                                    {
                                        <li><a class="@(Model.Comments.PageIndex==i?"active-pagination":"")"  asp-action="detail" asp-route-page="@(Model.Comments.PageIndex+temp)" asp-route-isDeleted="@ViewBag.IsDeleted" style="display:@((Model.Comments.PageIndex+temp)>Model.Comments.TotalPages?"none":"block")">@(Model.Comments.PageIndex + temp)</a></li>
                                    }
                                }
                                @if (Model.Comments.HasNext)
                                {
                                    <li><a class="Next" asp-action="detail" asp-route-page="@Model.Comments.TotalPages" asp-route-isDeleted="@ViewBag.IsDeleted"><i class="fas fa-chevron-right"></i></a></li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="right-side-detail"></div>
    </div>
</main>
@section Scripts{
    <script src="~/assets/Js/review-progress.js"></script>
}
<style>
    .rate-stars i {
        line-height: 0 !important;
    }

    .rate-stars .bi-star-half::before {
        line-height: 0 !important;
        font-size: 20px;
    }
</style>